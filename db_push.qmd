---
title: "db_push"
format: html
editor: source
---

## Load Packages

```{r}
#| output: false
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, RPostgres, DBI, here)

```


## read in csv files
```{r}
files <- list.files(here("clean_tables"))

for(i in 1:length(files)) {
  
  z <- read_csv(here("clean_tables", files[i]))
  
  assign(str_remove(files[i], ".csv"), z)
  
  
}


```


## Connect to `survey_data` schema in `ribbitr` database
```{r}
#| output: false
tryCatch({
    drv <- dbDriver("Postgres")
    print("Connecting to Databaseâ€¦")
    connection <- dbConnect(drv,
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"),
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"),
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

#search path
dbExecute(connection, "set search_path to survey_data")

```

## Push results to db
```{r}

dbWriteTable(connection, 'penn_22_bd_results', `penn_22-23_bd_results`, overwrite=T)


```


## Missing_ids
```{r}
# q <- "select r.region, s.site, v.date, s2.detection_type, c.species_capture,
# c.bd_swab_id, c.microbiome_swab_id, p.bd_swab_id
# from region r
# join site s on r.region_id = s.region_id 
# join visit v on s.site_id = v.site_id 
# join survey s2 on v.visit_id = s2.visit_id 
# join capture c on s2.survey_id = c.survey_id 
# full join penn_22_bd_results p on c.bd_swab_id = p.bd_swab_id
# where r.region = 'pennsylvania'
# and v.date > '2021-12-31'
# and p.bd_swab_id is not null;"
# 
# a <- dbGetQuery(connection, q)
#   
#   
# d <- qpcr_2022 %>% 
#   filter(!bd_swab_id %in% a$bd_swab_id) %>% 
#   select(bd_swab_id)


```

